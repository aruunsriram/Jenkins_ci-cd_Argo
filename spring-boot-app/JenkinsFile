pipeline {
  agent {
    docker {
      image 'aruunsriram45/aruun-docker-agent:lts'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    IMAGE_NAME = 'aruunsriram45/ci-cd-image'
    SONAR_URL = 'http://13.204.72.36:9000'
    GIT_REPO_NAME = 'CI-CD-Jenkins-Argo'
    GIT_USER_NAME = 'aruunsriram'
    GIT_REPO_URL = "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'Skipped actual Git checkout. Add if needed.'
        // git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "${IMAGE_NAME}:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            rm -rf temp-repo
            git clone https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git temp-repo
            cd temp-repo

            git config user.email "aruunrohit45@gmail.com"
            git config user.name "aruunsriram"

            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml

            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push origin main
          '''
        }
      }
    }
  }
}
